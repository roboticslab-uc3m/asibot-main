<b>WARNING</b>: For using the ASIBOT libraries with SWIG wrappers and therefore invoking them through Python,
Java (-> Matlab), etc... bindings, (for now) you must export them to the YARP yarpmod plugin library.
If you do this, they may not belong to the rlPlugins plugin library simultaneously.
This is, a YARP device can belong to either to the YARP project <b>OR</b> to the ASIBOT project
(this is <b>mutually exclusive</b>).

If you still want to export the ASIBOT libraries to the YARP yarpmod plugin library, you must:

\verbatim
cp $ASIBOT_ROOT/example/exportable/ExternalModules.cmake.template $YARP_ROOT/conf/ExternalModules.cmake
\endverbatim

Configure the ASIBOT libraries you want in the YARP yarpmod plugin library:

\verbatim
cd $YARP_DIR
ccmake .. -DCREATE_DEVICE_LIBRARY_MODULES=ON
\endverbatim

Press 'c' to see the library options. Set the ENABLE options you want to ON (ENABLE_yarpmod_ravebot for RaveBot, ENABLE_yarpmod_cartesianbot for CartesianBot, etc). Once you have selected your options, press 'c' 'c' and 'g' to generate the compilation project. Compile and install with this new YARP configuration with:

\verbatim
make -j3
sudo make install
\endverbatim

They should be shown (once installed) on issuing a:

\verbatim
yarpdev --list
\endverbatim

You can test RaveBot as a YARP yarpmod through:

\verbatim
yarpdev --device ravebot
\endverbatim

Or:

\verbatim
[on terminal 2] chmod +x $ASIBOT_ROOT/example/python/testRaveBot.py
[on terminal 2] $ASIBOT_ROOT/example/python/testRaveBot.py
\endverbatim

You can test CartesianBot as a YARP yarpmod through:

\verbatim
yarpdev --device cartesianbot --file $ASIBOT_ROOT/app/cartesianServer/conf/cartesianServer.ini
\endverbatim


<b>Or</b> create a separate instace of ravebot:

